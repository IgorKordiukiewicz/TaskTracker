@page "/authentication/{action}"

@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.Extensions.Configuration
@using System.Text.Json;
@using System.Text;

@inject NavigationManager NavigationManager
@inject IConfiguration Configuration
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UsersService UsersService
@inject UserDataService UserDataService

<RemoteAuthenticatorView Action="@Action" OnLogInSucceeded="OnLogIn" OnLogOutSucceeded="OnLogOut">
    <LogOut>
        @{
            var authority = (string)Configuration["Auth0:Authority"];
            var clientId = (string)Configuration["Auth0:ClientId"];

            NavigationManager.NavigateTo($"{authority}/v2/logout?client_id={clientId}");
        }
    </LogOut>
</RemoteAuthenticatorView>

@code {
    [Parameter]
    public required string Action { get; set; }

    private async Task OnLogIn(RemoteAuthenticationState _)
    {
        var state = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var userAuthId = state.User.Claims.First(x => x.Type == "sub").Value;
        var isRegistered = await UsersService.IsRegistered(userAuthId);
        if(isRegistered)
        {
            await UserDataService.UpdateUserData();
            return;
        }

        NavigationManager.NavigateTo("complete-registration", true);
    }

    private void OnLogOut(RemoteAuthenticationState _)
    {
        UserDataService.OnSignOut();
    }
}

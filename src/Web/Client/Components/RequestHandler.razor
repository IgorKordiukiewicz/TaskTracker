@using System.Text.Json;
@using System.Text;


@code {
    private readonly HttpClient _httpClient;

    public RequestHandler(HttpClient httpClient)
    {
        _httpClient = httpClient;
    }

    public async Task<TResponse?> GetAsync<TResponse>(string url)
    {
        return await GetResponseContent<TResponse>(await _httpClient.GetAsync(url));    
    }

    public async Task<TResponse?> PostAsync<TResponse, TBody>(string url, TBody body)
        where TBody : class
    {
        var json = JsonSerializer.Serialize(body);
        var content = new StringContent(json, Encoding.UTF8, "application/json");

        return await GetResponseContent<TResponse>(await _httpClient.PostAsync(url, content));
    }

    public async Task PostAsync<TBody>(string url, TBody body)
    {
        var json = JsonSerializer.Serialize(body);
        var content = new StringContent(json, Encoding.UTF8, "application/json");

        await _httpClient.PostAsync(url, content);
    }

    private async Task<TResponse?> GetResponseContent<TResponse>(HttpResponseMessage response) 
    {
        if (response.IsSuccessStatusCode)
        {
            return await response.Content.ReadFromJsonAsync<TResponse>();
        }
        else
        {
            // TODO: Display error dialog
            return default;
        }
    }
}
